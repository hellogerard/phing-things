<?xml version="1.0"?>

<!--
    This is a phing build file. To run this, type `phing` in this directory.

    See: http://phing.info 
         http://phing.info/trac/wiki/Users/Download (installation)
-->

<project name="MySite" basedir="." default="main">

    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++ Configuration +++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <!-- This sets the PHP include path -->
    <includepath classpath="." />

    <!-- This is the prefix for the URL for static content -->
    <property name="static.host" value="phing-things.work.local" />

    <!-- This is the path to the YUI Compressor jar file -->
    <property name="yui.path" value="vendor/yuicompressor-2.4.2/build/yuicompressor-2.4.2.jar" />

    <property name="build.src" value="mysite" />
    <property name="build.dest" value="build" />


    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++ Targets +++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <!--
         This target copies a set of static html files to a new location and
         updates paths to optimized static resources (css, javascript, and
         images).
    -->
    <target name="optimize">

        <echo msg="Filtering &lt;link&gt; &amp; &lt;script&gt; tags" />

        <!-- Copy the original project to a "build" directory -->
        <copy todir="${build.dest}">
            <fileset dir="${build.src}">
                <include name="**/*.*" />
            </fileset>
        </copy>

        <!--
             Working on the build copy, search for static resources. Optimize
             the static resources, and dynamically update the paths to the new
             resources.
        -->
        <reflexive>
            <filterchain>
                <filterreader classname="phing.filters.OptimizeImages">
                    <param name="static.host" value="${static.host}/cache"/>
                    <param name="webroot" value="${build.dest}"/>
                    <param name="todir" value="${build.dest}/cache"/>
                </filterreader>
                <filterreader classname="phing.filters.OptimizeCSS">
                    <param name="static.host" value="${static.host}/cache"/>
                    <param name="webroot" value="${build.dest}"/>
                    <param name="todir" value="${build.dest}/cache"/>
                    <param name="yui.path" value="${yui.path}"/>
                </filterreader>
                <filterreader classname="phing.filters.OptimizeJS">
                    <param name="static.host" value="${static.host}/cache"/>
                    <param name="webroot" value="${build.dest}"/>
                    <param name="todir" value="${build.dest}/cache"/>
                    <param name="yui.path" value="${yui.path}"/>
                </filterreader>
            </filterchain>

            <fileset dir="${build.dest}">
                <include name="**/*.css" />
                <include name="**/*.html" />
            </fileset>
        </reflexive>

    </target>


    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <!--
         This target optimizes a set of image files in place, modifying the
         original image.
    -->
    <target name="optimize.images">

        <!-- Tell phing where to find this task class -->
        <taskdef name="optimizeimages" classname="phing.tasks.OptimizeImagesTask" />

        <optimizeimages>

            <!-- Place any images you want to optimize in here -->
            <fileset dir="${build.src}">
                <include name="**/*.gif" />
                <include name="**/*.jpg" />
                <include name="**/*.png" />
            </fileset>

        </optimizeimages>

    </target>


    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <!--
         This target minifies a set of Javascript files, creating a copy of the
         original named with a ".min.js" extension.
    -->
    <target name="minify.js">

        <!-- Tell phing where to find this task class -->
        <taskdef name="minify" classname="phing.tasks.MinifyJSTask" />

        <!--
             Place any JS files you want to minify in here. We'll exclude JS
             files that appear to be minimized already.
        -->
        <minify yuicompressorpath="${yui.path}">
            <fileset dir="${build.src}" >
                <include name="**/*.js"/>
                <exclude name="**/*.min.js"/>
            </fileset>
        </minify>

    </target>


    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <!-- 
         This target generates HTML reports from the Checkstyle output files.
    -->
    <target name="checkstyle">

        <!-- Tell phing where to find this task class -->
        <taskdef name="checkstyle-report" classname="phing.tasks.CheckstyleReportTask" />

        <checkstyle-report infile="${build.src}/reports/checkstyle.xml"
            styledir="phing/etc"
            format="frames-errors"
            todir="${build.dest}/reports"/>

    </target>


    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <!--
         This target runs all phing build files in subfolders.
    -->
    <target name="forkphing">

        <taskdef name="forkphing" classname="phing.tasks.ForkPhingTask" />

        <!-- Find and run all build.xml files except for this one -->
        <forkphing checkreturn="true" passthru="true">
            <fileset dir=".">
                <include name="**/build.xml" />
                <exclude name="build.xml" />
                <exclude name="vendor/**" />
            </fileset>
        </forkphing>

    </target>


    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <!--
         This target pre-compiles all Smarty template files. EXPERIMENTAL!
    -->
    <target name="smarty">

        <taskdef name="smartycompile" classname="phing.tasks.SmartyCompileTask" />

		<adhoc-task name="foo"><![CDATA[
			class FooTest extends Task {
				function main() {
                    $_SERVER['DOCUMENT_ROOT'] = "mysite";
                    unset($_SERVER['PHP_SELF']);
				}
			}
		]]></adhoc-task>
	
		<foo />

        <smartycompile compilePath="${build.dest}/templates">

            <fileset dir="${build.src}">
                <include name="**/*.tpl" />
            </fileset>

        </smartycompile>

    </target>


    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <target name="main">

        <echo msg="Run `phing -l` to see a list of targets."/>

    </target>

</project>
